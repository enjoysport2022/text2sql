SELECT COUNT(*) FROM Customer;
SELECT MAX(Total) FROM Invoice;
SELECT AVG(AlbumId) FROM Album;
SELECT COUNT(*) FROM Employee;
SELECT MAX(Milliseconds) FROM Track;
SELECT LastName FROM Customer  WHERE CustomerId = (SELECT TOP 1 CustomerId FROM Invoice GROUP BY CustomerId ORDER BY COUNT(*) DESC);
ID SELECT ArtistId FROM Artist WHERE Name = 'Queen';
ID SELECT CustomerId FROM Invoice  GROUP BY CustomerId  ORDER BY COUNT(*) DESC  LIMIT 1;
SELECT Title FROM Album  WHERE AlbumId = (SELECT AlbumId                   FROM Track                   GROUP BY AlbumId                   ORDER BY MIN(Milliseconds) ASC                   LIMIT 1);
SELECT MIN(BirthDate) FROM Employee;
SELECT MAX(Quantity) FROM InvoiceLine;
SELECT COUNT(*) FROM Artist WHERE Name LIKE 'C%';
SELECT COUNT(*) FROM Employee WHERE Title = 'Sales Support Agent';
SELECT MIN(UnitPrice) FROM Track;
SELECT MIN(InvoiceDate) FROM Invoice;
SELECT Name FROM Playlist  WHERE PlaylistId = (SELECT PlaylistId FROM PlaylistTrack GROUP BY PlaylistId ORDER BY COUNT(*) DESC LIMIT 1);
SELECT COUNT(*) FROM Customer WHERE Country = 'Canada';
SELECT COUNT(*) FROM Album WHERE Title LIKE '%Greatest Hits%';
ID SELECT TrackId FROM InvoiceLine  GROUP BY TrackId  ORDER BY SUM(Quantity) DESC  LIMIT 1;
SELECT COUNT(*) FROM Employee WHERE Title IS NOT NULL;
SELECT Name FROM Playlist  WHERE PlaylistId NOT IN (SELECT DISTINCT PlaylistId FROM PlaylistTrack);
SELECT MAX(UnitPrice) FROM InvoiceLine;
SELECT COUNT(*) FROM Genre;
SELECT COUNT(*) FROM Track WHERE Milliseconds > 600000;
SELECT COUNT(*) FROM Invoice WHERE InvoiceDate >= '2010-01-01';
SELECT COUNT(*) FROM Customer WHERE LastName LIKE '%S';
SELECT COUNT(*) FROM Track WHERE Milliseconds >= 180000 AND Milliseconds <= 240000;
SELECT FirstName, LastName FROM Employee  WHERE EmployeeId = (SELECT ReportsTo FROM Employee GROUP BY ReportsTo ORDER BY COUNT(*) DESC LIMIT 1);
ID SELECT TrackId FROM InvoiceLine  GROUP BY TrackId  ORDER BY SUM(Quantity * UnitPrice) DESC  LIMIT 1;
SELECT Title FROM Album  WHERE AlbumId = (SELECT AlbumId                   FROM Track                   GROUP BY AlbumId                   ORDER BY SUM(Milliseconds) DESC                   LIMIT 1);
SELECT COUNT(*) FROM Employee WHERE YEAR(BirthDate) < 1980;
ID SELECT TrackId FROM InvoiceLine  GROUP BY TrackId  ORDER BY SUM(Quantity) DESC  LIMIT 1;
SELECT Name FROM Playlist  WHERE PlaylistId = (SELECT PlaylistId FROM PlaylistTrack GROUP BY PlaylistId ORDER BY COUNT(*) ASC LIMIT 1);
SELECT COUNT(*) FROM Customer WHERE LastName = 'Smith';
SELECT COUNT(*) FROM Invoice WHERE Total <= 10.00;
SELECT COUNT(*) FROM MediaType WHERE Name LIKE '%audio%';
SELECT COUNT(*) FROM Artist;
SELECT COUNT(*) FROM Track WHERE GenreId = (SELECT GenreId FROM Genre WHERE Name = 'Rock');
SELECT MAX(HireDate) FROM Employee;
ID SELECT CustomerId FROM Invoice  GROUP BY CustomerId  ORDER BY SUM(Total) DESC  LIMIT 1;
SELECT COUNT(*) FROM Employee WHERE FirstName LIKE '%an%';
SELECT AVG(Total) FROM Invoice;
SELECT MAX(UnitPrice) FROM Track;
SELECT COUNT(*) FROM Employee WHERE Title LIKE '%Manager';
SELECT COUNT(*) FROM Genre WHERE Name LIKE '%Rock%';
SELECT BillingCountry FROM Invoice  GROUP BY BillingCountry  ORDER BY COUNT(*) DESC  LIMIT 1;
ID 为 3 的客户的数量 SELECT COUNT(*) FROM Customer WHERE Country = 'Brazil' AND SupportRepId = 3;
SELECT COUNT(*) FROM Invoice WHERE InvoiceDate BETWEEN '2012-01-01' AND '2012-01-31';
SELECT AVG(Milliseconds) FROM Track WHERE AlbumId IS NOT NULL;
SELECT FirstName, LastName FROM Employee WHERE Title = 'Sales Support Agent';
SELECT AVG(Quantity) FROM InvoiceLine;
SELECT Name FROM Artist  ORDER BY LENGTH(Name) - LENGTH(REPLACE(Name, 'a', '')) DESC  LIMIT 1;
SELECT MAX(InvoiceDate) FROM Invoice;
SELECT Name, COUNT(*) AS MusicCount FROM PlaylistTrack  JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId  GROUP BY PlaylistTrack.PlaylistId  ORDER BY MusicCount DESC  LIMIT 1;
SELECT COUNT(*) FROM Track WHERE UnitPrice <= 1.00;
SELECT COUNT(*) FROM Customer WHERE SupportRepId = 5;
SELECT InvoiceId, SUM(Quantity) AS TotalQuantity FROM InvoiceLine  GROUP BY InvoiceId;
SELECT AVG(UnitPrice) FROM Track WHERE AlbumId IS NOT NULL;
SELECT MIN(BirthDate) FROM Employee;
ID SELECT TrackId FROM InvoiceLine  GROUP BY TrackId  ORDER BY SUM(Quantity) ASC  LIMIT 1;
SELECT COUNT(*) FROM Playlist  WHERE PlaylistId NOT IN (SELECT DISTINCT PlaylistId FROM PlaylistTrack);
SELECT AVG(UnitPrice) FROM Track  JOIN MediaType ON Track.MediaTypeId = MediaType.MediaTypeId  WHERE MediaType.Name LIKE '%audio%';
SELECT COUNT(*) FROM Employee WHERE Title LIKE '%Manager';
SELECT AVG(Total) FROM Invoice;
SELECT COUNT(*) FROM Track WHERE UnitPrice <= 0.99;
ID SELECT CustomerId FROM Invoice  WHERE InvoiceDate = (SELECT MIN(InvoiceDate) FROM Invoice)  LIMIT 1;
SELECT Title, COUNT(*) AS MusicCount FROM Track  JOIN Album ON Track.AlbumId = Album.AlbumId  GROUP BY Album.AlbumId  ORDER BY MusicCount DESC  LIMIT 1;
SELECT Genre.Name, COUNT(*) AS GenreCount FROM Track  JOIN Genre ON Track.GenreId = Genre.GenreId  GROUP BY Genre.Name  ORDER BY GenreCount DESC  LIMIT 5;
SELECT COUNT(*) FROM Customer WHERE Country = 'USA';
SELECT Playlist.Name, COUNT(*) AS MusicCount FROM PlaylistTrack  JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId  GROUP BY PlaylistTrack.PlaylistId  ORDER BY MusicCount ASC  LIMIT 5;
SELECT MAX(Milliseconds) FROM Track;
SELECT FirstName, LastName FROM Employee WHERE Title LIKE '%Manager';
SELECT SUM(Total) FROM Invoice WHERE InvoiceDate BETWEEN '2013-01-01' AND '2013-12-31';
SELECT AVG(Total) FROM Invoice  WHERE CustomerId IN (SELECT CustomerId FROM Customer);
SELECT InvoiceDate, SUM(Total) FROM Invoice  WHERE InvoiceDate = (SELECT MIN(InvoiceDate) FROM Invoice);
SELECT Genre.Name, COUNT(*) AS MusicCount FROM Track  JOIN Genre ON Track.GenreId = Genre.GenreId  GROUP BY Genre.Name;
SELECT COUNT(*) FROM Customer  WHERE Country = 'Canada' AND (FirstName LIKE '%a%' OR LastName LIKE '%a%');
SELECT InvoiceId, AVG(UnitPrice) AS AvgUnitPrice FROM InvoiceLine  GROUP BY InvoiceId;
SELECT Title, MAX(UnitPrice) FROM Track  JOIN Album ON Track.AlbumId = Album.AlbumId;
SELECT COUNT(*) FROM Employee WHERE Title LIKE '%Representative';
SELECT Playlist.Name, COUNT(DISTINCT TrackId) AS UniqueMusicCount FROM PlaylistTrack  JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId  GROUP BY PlaylistTrack.PlaylistId  ORDER BY UniqueMusicCount DESC  LIMIT 5;
SELECT MIN(Milliseconds) FROM Track;
SELECT CustomerId, SUM(Total) AS TotalAmount FROM Invoice  GROUP BY CustomerId;
SELECT Title FROM Employee WHERE BirthDate = (SELECT MAX(BirthDate) FROM Employee);
ID 为 4 或 5 的客户的数量 SELECT COUNT(*) FROM Customer  WHERE Country = 'Germany' AND SupportRepId IN (4, 5);
SELECT InvoiceDate, SUM(Total) FROM Invoice  WHERE InvoiceDate = (SELECT MAX(InvoiceDate) FROM Invoice);
SELECT Playlist.Name, COUNT(*) AS MusicCount FROM PlaylistTrack  JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId  GROUP BY PlaylistTrack.PlaylistId  ORDER BY MusicCount DESC  LIMIT 5;
SELECT Genre.Name, AVG(UnitPrice) AS AvgUnitPrice FROM Track  JOIN Genre ON Track.GenreId = Genre.GenreId  GROUP BY Genre.Name  ORDER BY AvgUnitPrice DESC  LIMIT 1;
SELECT COUNT(*) FROM Employee WHERE Title LIKE '%Assistant';
ID 和售价 SELECT TrackId, MAX(UnitPrice) FROM InvoiceLine;
SELECT COUNT(DISTINCT CustomerId) FROM Invoice;
SELECT Title, COUNT(*) AS MusicCount FROM Track  JOIN Album ON Track.AlbumId = Album.AlbumId  GROUP BY Album.AlbumId  ORDER BY MusicCount ASC  LIMIT 5;
SELECT COUNT(*) FROM Track  JOIN Genre ON Track.GenreId = Genre.GenreId  WHERE Genre.Name LIKE 'Rock%';
SELECT FirstName, LastName FROM Employee WHERE Title LIKE '%Assistant';
SELECT Playlist.Name, COUNT(DISTINCT TrackId) AS UniqueMusicCount FROM PlaylistTrack  JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId  GROUP BY PlaylistTrack.PlaylistId  ORDER BY UniqueMusicCount ASC  LIMIT 5;
SELECT Name, MAX(UnitPrice) FROM MediaType;
SELECT COUNT(*) FROM Track WHERE Milliseconds > 10 * 60 * 1000;
ID 和售价 SELECT TrackId, MIN(UnitPrice) FROM InvoiceLine;
SELECT
SELECT AVG(Total) FROM Invoice WHERE CustomerId IN (SELECT CustomerId FROM Customer);
SELECT Name, MIN(UnitPrice) FROM Track;
SELECT COUNT(*) FROM Employee WHERE BirthDate BETWEEN '1980-01-01' AND '1989-12-31';
SELECT Playlist.Name, COUNT(*) AS MusicCount FROM PlaylistTrack  JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId  GROUP BY PlaylistTrack.PlaylistId  ORDER BY MusicCount ASC  LIMIT 5;
SELECT COUNT(*) FROM Track WHERE Milliseconds < 60 * 1000;
SELECT BillingCountry AS Country, SUM(Total) AS TotalSales FROM Invoice  GROUP BY BillingCountry;
SELECT COUNT(*) FROM Customer WHERE Country = 'USA' AND (FirstName LIKE '%a%' OR LastName LIKE '%a%');
SELECT MAX(Total) FROM Invoice;
SELECT Playlist.Name, COUNT(DISTINCT GenreId) AS UniqueGenreCount FROM PlaylistTrack  JOIN Track ON PlaylistTrack.TrackId = Track.TrackId  JOIN Genre ON Track.GenreId = Genre.GenreId  JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId  GROUP BY PlaylistTrack.PlaylistId  ORDER BY UniqueGenreCount DESC  LIMIT 5;
SELECT FirstName, LastName FROM Employee WHERE EmployeeId NOT IN (SELECT ReportsTo FROM Employee);
ID 和销售额 SELECT TrackId, MAX(UnitPrice * Quantity) FROM InvoiceLine;
ID 为 5 的客户数量 SELECT COUNT(*) FROM Customer WHERE SupportRepId = 5;
SELECT COUNT(*) FROM Track WHERE Milliseconds > 6 * 60 * 1000 AND Milliseconds < 10 * 60 * 1000;
ID 和销售额 SELECT TrackId, MIN(UnitPrice * Quantity) FROM Invoice
SELECT COUNT(*) FROM Track WHERE AlbumId IS NULL;
SELECT COUNT(*) FROM Customer WHERE LastName LIKE '%Smith';
SELECT STRFTIME('%Y', InvoiceDate) AS Year, SUM(Total) AS TotalSales FROM Invoice  GROUP BY Year;
SELECT Playlist.Name, COUNT(*) AS MusicCount FROM PlaylistTrack  JOIN Track ON PlaylistTrack.TrackId = Track.TrackId  JOIN Genre ON Track.GenreId = Genre.GenreId  JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId  WHERE Genre.Name = 'Rock' GROUP BY PlaylistTrack.PlaylistId  ORDER BY MusicCount DESC  LIMIT 5;
SELECT ReportsTo, COUNT(*) FROM Employee WHERE ReportsTo IS NOT NULL  GROUP BY ReportsTo;
SELECT AVG(Milliseconds) FROM Track;
SELECT COUNT(DISTINCT Country) FROM Customer WHERE CustomerId IN (SELECT CustomerId FROM Invoice);
SELECT Playlist.Name, COUNT(*) AS MusicCount FROM PlaylistTrack  JOIN Track ON PlaylistTrack.TrackId = Track.TrackId  JOIN Genre ON Track.GenreId = Genre.GenreId  JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId  WHERE Genre.Name LIKE '%Metal' GROUP BY PlaylistTrack.PlaylistId  ORDER BY MusicCount DESC  LIMIT 5;
ID 为 1 的唱片的音乐数量 SELECT COUNT(*) FROM Track WHERE Milliseconds > 10 * 60 * 1000 AND AlbumId != 1;
SELECT BillingCountry AS Country, AVG(Total) AS AvgSales FROM Invoice  GROUP BY BillingCountry;
SELECT BirthDate FROM Employee  WHERE BirthDate = (SELECT MIN(BirthDate) FROM Employee);
SELECT BirthDate FROM Employee pass;
SELECT COUNT(DISTINCT CustomerId) FROM InvoiceLine  JOIN Track ON InvoiceLine.TrackId = Track.TrackId  JOIN Genre ON Track.GenreId = Genre.GenreId  WHERE Genre.Name LIKE 'Blues%';
ID 和售价 SELECT TrackId, UnitPrice FROM InvoiceLine  WHERE UnitPrice = (SELECT MAX(UnitPrice) FROM InvoiceLine);
SELECT COUNT(*) FROM Employee  WHERE BirthDate BETWEEN '1980-01-01' AND '1989-12-31' AND Title LIKE '%Manager%';
SELECT MIN(Total) FROM Invoice;
SELECT COUNT(*) FROM Track WHERE Milliseconds > 5 * 60 * 1000;
SELECT BillingCountry AS Country, COUNT(DISTINCT CustomerId) AS CustomerCount FROM Invoice  GROUP BY BillingCountry;
SELECT Playlist.Name, COUNT(*) AS MusicCount FROM PlaylistTrack  JOIN Track ON PlaylistTrack.TrackId = Track.TrackId  JOIN Genre ON Track.GenreId = Genre.GenreId  JOIN Playlist ON PlaylistTrack.PlaylistId = Playlist.PlaylistId  WHERE Genre.Name LIKE '%Pop' GROUP BY PlaylistTrack.PlaylistId  ORDER BY MusicCount ASC  LIMIT 5;
SELECT FirstName, LastName FROM Employee  WHERE BirthDate = (SELECT MIN(BirthDate) FROM Employee);
SELECT COUNT(*) FROM InvoiceLine  JOIN Track ON InvoiceLine.TrackId = Track.TrackId  WHERE UnitPrice >= 0 AND UnitPrice < 1;
SELECT COUNT(DISTINCT CustomerId) FROM Invoice;
SELECT COUNT(*) FROM Track WHERE Milliseconds < 2 * 60 * 1000;
SELECT Playlist.Name, COUNT(*) AS MusicCount FROM PlaylistTrack  JOIN Track ON PlaylistTrack.TrackId = Track.TrackId
